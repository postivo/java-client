/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import pl.postivo.sdk.utils.Utils;

/**
 * DocumentMock
 * 
 * <p>Mock document used to simulate page count for pricing without uploading a real file.
 */
public class DocumentMock {
    /**
     * Number of pages in the mock document.
     */
    @JsonProperty("pages")
    private long pages;

    @JsonCreator
    public DocumentMock(
            @JsonProperty("pages") long pages) {
        this.pages = pages;
    }

    /**
     * Number of pages in the mock document.
     */
    public long pages() {
        return this.pages;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Number of pages in the mock document.
     */
    public DocumentMock withPages(long pages) {
        this.pages = pages;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DocumentMock other = (DocumentMock) o;
        return 
            Utils.enhancedDeepEquals(this.pages, other.pages);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            pages);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DocumentMock.class,
                "pages", pages);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private long pages;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Number of pages in the mock document.
         */
        public Builder pages(long pages) {
            this.pages = pages;
            return this;
        }

        public DocumentMock build() {
            return new DocumentMock(
                pages);
        }

    }
}
