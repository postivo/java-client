/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import pl.postivo.sdk.utils.Utils;


public class EnvelopeTemplate {
    /**
     * Envelope template group name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("envelope_group_name")
    private String envelopeGroupName;

    /**
     * Envelope template group description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("envelope_group_description")
    private String envelopeGroupDescription;

    /**
     * Envelope templates in this group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("envelope")
    private List<Envelope> envelope;

    @JsonCreator
    public EnvelopeTemplate(
            @JsonProperty("envelope_group_name") @Nullable String envelopeGroupName,
            @JsonProperty("envelope_group_description") @Nullable String envelopeGroupDescription,
            @JsonProperty("envelope") @Nullable List<Envelope> envelope) {
        this.envelopeGroupName = envelopeGroupName;
        this.envelopeGroupDescription = envelopeGroupDescription;
        this.envelope = envelope;
    }
    
    public EnvelopeTemplate() {
        this(null, null, null);
    }

    /**
     * Envelope template group name.
     */
    public Optional<String> envelopeGroupName() {
        return Optional.ofNullable(this.envelopeGroupName);
    }

    /**
     * Envelope template group description.
     */
    public Optional<String> envelopeGroupDescription() {
        return Optional.ofNullable(this.envelopeGroupDescription);
    }

    /**
     * Envelope templates in this group.
     */
    public Optional<List<Envelope>> envelope() {
        return Optional.ofNullable(this.envelope);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Envelope template group name.
     */
    public EnvelopeTemplate withEnvelopeGroupName(@Nullable String envelopeGroupName) {
        this.envelopeGroupName = envelopeGroupName;
        return this;
    }


    /**
     * Envelope template group description.
     */
    public EnvelopeTemplate withEnvelopeGroupDescription(@Nullable String envelopeGroupDescription) {
        this.envelopeGroupDescription = envelopeGroupDescription;
        return this;
    }


    /**
     * Envelope templates in this group.
     */
    public EnvelopeTemplate withEnvelope(@Nullable List<Envelope> envelope) {
        this.envelope = envelope;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EnvelopeTemplate other = (EnvelopeTemplate) o;
        return 
            Utils.enhancedDeepEquals(this.envelopeGroupName, other.envelopeGroupName) &&
            Utils.enhancedDeepEquals(this.envelopeGroupDescription, other.envelopeGroupDescription) &&
            Utils.enhancedDeepEquals(this.envelope, other.envelope);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            envelopeGroupName, envelopeGroupDescription, envelope);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EnvelopeTemplate.class,
                "envelopeGroupName", envelopeGroupName,
                "envelopeGroupDescription", envelopeGroupDescription,
                "envelope", envelope);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String envelopeGroupName;

        private String envelopeGroupDescription;

        private List<Envelope> envelope;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Envelope template group name.
         */
        public Builder envelopeGroupName(@Nullable String envelopeGroupName) {
            this.envelopeGroupName = envelopeGroupName;
            return this;
        }

        /**
         * Envelope template group description.
         */
        public Builder envelopeGroupDescription(@Nullable String envelopeGroupDescription) {
            this.envelopeGroupDescription = envelopeGroupDescription;
            return this;
        }

        /**
         * Envelope templates in this group.
         */
        public Builder envelope(@Nullable List<Envelope> envelope) {
            this.envelope = envelope;
            return this;
        }

        public EnvelopeTemplate build() {
            return new EnvelopeTemplate(
                envelopeGroupName, envelopeGroupDescription, envelope);
        }

    }
}
