/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.postivo.sdk.utils.LazySingletonValue;
import pl.postivo.sdk.utils.Utils;

/**
 * MiscInfo
 * 
 * <p>Additional shipment metadata. At least one of <code>order_name</code> or <code>mpk</code> must be provided.
 */
public class MiscInfo {
    /**
     * MPK (“miejsce powstania kosztu”) — billing cost-center identifier to be included on invoices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mpk")
    private JsonNullable<String> mpk;

    /**
     * Order name assigned to this shipment; displayed in reports and related views.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_name")
    private JsonNullable<String> orderName;

    @JsonCreator
    public MiscInfo(
            @JsonProperty("mpk") @Nullable JsonNullable<String> mpk,
            @JsonProperty("order_name") @Nullable JsonNullable<String> orderName) {
        this.mpk = Optional.ofNullable(mpk)
            .orElse(JsonNullable.of(Builder._SINGLETON_VALUE_Mpk.value()));
        this.orderName = Optional.ofNullable(orderName)
            .orElse(JsonNullable.of(Builder._SINGLETON_VALUE_OrderName.value()));
    }
    
    public MiscInfo() {
        this(null, null);
    }

    /**
     * MPK (“miejsce powstania kosztu”) — billing cost-center identifier to be included on invoices.
     */
    public JsonNullable<String> mpk() {
        return this.mpk;
    }

    /**
     * Order name assigned to this shipment; displayed in reports and related views.
     */
    public JsonNullable<String> orderName() {
        return this.orderName;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * MPK (“miejsce powstania kosztu”) — billing cost-center identifier to be included on invoices.
     */
    public MiscInfo withMpk(@Nullable String mpk) {
        this.mpk = JsonNullable.of(mpk);
        return this;
    }


    /**
     * Order name assigned to this shipment; displayed in reports and related views.
     */
    public MiscInfo withOrderName(@Nullable String orderName) {
        this.orderName = JsonNullable.of(orderName);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MiscInfo other = (MiscInfo) o;
        return 
            Utils.enhancedDeepEquals(this.mpk, other.mpk) &&
            Utils.enhancedDeepEquals(this.orderName, other.orderName);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            mpk, orderName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MiscInfo.class,
                "mpk", mpk,
                "orderName", orderName);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> mpk;

        private JsonNullable<String> orderName;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * MPK (“miejsce powstania kosztu”) — billing cost-center identifier to be included on invoices.
         */
        public Builder mpk(@Nullable String mpk) {
            this.mpk = JsonNullable.of(mpk);
            return this;
        }

        /**
         * Order name assigned to this shipment; displayed in reports and related views.
         */
        public Builder orderName(@Nullable String orderName) {
            this.orderName = JsonNullable.of(orderName);
            return this;
        }

        public MiscInfo build() {
            return new MiscInfo(
                mpk, orderName);
        }


        private static final LazySingletonValue<String> _SINGLETON_VALUE_Mpk =
                new LazySingletonValue<>(
                        "mpk",
                        "null",
                        new TypeReference<String>() {});

        private static final LazySingletonValue<String> _SINGLETON_VALUE_OrderName =
                new LazySingletonValue<>(
                        "order_name",
                        "null",
                        new TypeReference<String>() {});
    }
}
