/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import pl.postivo.sdk.utils.Utils;

/**
 * PingResponse
 * 
 * <p>Ping response.
 */
public class PingResponse {
    /**
     * API service status: OK (available), ERR (unavailable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private String status;

    /**
     * Current API version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    private String version;

    /**
     * Indicates whether the connection was established to the test system (SANDBOX).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sandbox")
    private Boolean sandbox;

    @JsonCreator
    public PingResponse(
            @JsonProperty("status") @Nullable String status,
            @JsonProperty("version") @Nullable String version,
            @JsonProperty("sandbox") @Nullable Boolean sandbox) {
        this.status = status;
        this.version = version;
        this.sandbox = sandbox;
    }
    
    public PingResponse() {
        this(null, null, null);
    }

    /**
     * API service status: OK (available), ERR (unavailable).
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Current API version.
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Indicates whether the connection was established to the test system (SANDBOX).
     */
    public Optional<Boolean> sandbox() {
        return Optional.ofNullable(this.sandbox);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * API service status: OK (available), ERR (unavailable).
     */
    public PingResponse withStatus(@Nullable String status) {
        this.status = status;
        return this;
    }


    /**
     * Current API version.
     */
    public PingResponse withVersion(@Nullable String version) {
        this.version = version;
        return this;
    }


    /**
     * Indicates whether the connection was established to the test system (SANDBOX).
     */
    public PingResponse withSandbox(@Nullable Boolean sandbox) {
        this.sandbox = sandbox;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PingResponse other = (PingResponse) o;
        return 
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.version, other.version) &&
            Utils.enhancedDeepEquals(this.sandbox, other.sandbox);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            status, version, sandbox);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PingResponse.class,
                "status", status,
                "version", version,
                "sandbox", sandbox);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String status;

        private String version;

        private Boolean sandbox;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * API service status: OK (available), ERR (unavailable).
         */
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }

        /**
         * Current API version.
         */
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }

        /**
         * Indicates whether the connection was established to the test system (SANDBOX).
         */
        public Builder sandbox(@Nullable Boolean sandbox) {
            this.sandbox = sandbox;
            return this;
        }

        public PingResponse build() {
            return new PingResponse(
                status, version, sandbox);
        }

    }
}
