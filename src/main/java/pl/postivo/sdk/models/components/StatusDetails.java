/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.postivo.sdk.utils.Utils;

/**
 * StatusDetails
 * 
 * <p>Details of a single shipment and its status events
 */
public class StatusDetails {
    /**
     * Single shipment details
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment_details")
    private ShipmentDetails shipmentDetails;

    /**
     * List of status events for the shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_events")
    private JsonNullable<List<StatusEvent>> statusEvents;

    @JsonCreator
    public StatusDetails(
            @JsonProperty("shipment_details") @Nullable ShipmentDetails shipmentDetails,
            @JsonProperty("status_events") @Nullable JsonNullable<List<StatusEvent>> statusEvents) {
        this.shipmentDetails = shipmentDetails;
        this.statusEvents = Optional.ofNullable(statusEvents)
            .orElse(JsonNullable.undefined());
    }
    
    public StatusDetails() {
        this(null, null);
    }

    /**
     * Single shipment details
     */
    public Optional<ShipmentDetails> shipmentDetails() {
        return Optional.ofNullable(this.shipmentDetails);
    }

    /**
     * List of status events for the shipment.
     */
    public JsonNullable<List<StatusEvent>> statusEvents() {
        return this.statusEvents;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Single shipment details
     */
    public StatusDetails withShipmentDetails(@Nullable ShipmentDetails shipmentDetails) {
        this.shipmentDetails = shipmentDetails;
        return this;
    }


    /**
     * List of status events for the shipment.
     */
    public StatusDetails withStatusEvents(@Nullable List<StatusEvent> statusEvents) {
        this.statusEvents = JsonNullable.of(statusEvents);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StatusDetails other = (StatusDetails) o;
        return 
            Utils.enhancedDeepEquals(this.shipmentDetails, other.shipmentDetails) &&
            Utils.enhancedDeepEquals(this.statusEvents, other.statusEvents);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            shipmentDetails, statusEvents);
    }
    
    @Override
    public String toString() {
        return Utils.toString(StatusDetails.class,
                "shipmentDetails", shipmentDetails,
                "statusEvents", statusEvents);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private ShipmentDetails shipmentDetails;

        private JsonNullable<List<StatusEvent>> statusEvents;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Single shipment details
         */
        public Builder shipmentDetails(@Nullable ShipmentDetails shipmentDetails) {
            this.shipmentDetails = shipmentDetails;
            return this;
        }

        /**
         * List of status events for the shipment.
         */
        public Builder statusEvents(@Nullable List<StatusEvent> statusEvents) {
            this.statusEvents = JsonNullable.of(statusEvents);
            return this;
        }

        public StatusDetails build() {
            return new StatusDetails(
                shipmentDetails, statusEvents);
        }

    }
}
