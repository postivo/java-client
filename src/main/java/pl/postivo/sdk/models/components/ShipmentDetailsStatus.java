/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Optional;
import pl.postivo.sdk.utils.Utils;

/**
 * ShipmentDetailsStatus
 * 
 * <p>Shipment processing status.
 */
public class ShipmentDetailsStatus {
    /**
     * Indicates whether an error occurred during shipment processing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    private Boolean error;

    /**
     * Shipment status code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private String code;

    /**
     * Shipment status description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private String name;

    /**
     * Date and time of the shipment status change (UTC).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    private OffsetDateTime date;

    @JsonCreator
    public ShipmentDetailsStatus(
            @JsonProperty("error") @Nullable Boolean error,
            @JsonProperty("code") @Nullable String code,
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("date") @Nullable OffsetDateTime date) {
        this.error = error;
        this.code = code;
        this.name = name;
        this.date = date;
    }
    
    public ShipmentDetailsStatus() {
        this(null, null, null,
            null);
    }

    /**
     * Indicates whether an error occurred during shipment processing.
     */
    public Optional<Boolean> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Shipment status code.
     */
    public Optional<String> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Shipment status description.
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Date and time of the shipment status change (UTC).
     */
    public Optional<OffsetDateTime> date() {
        return Optional.ofNullable(this.date);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Indicates whether an error occurred during shipment processing.
     */
    public ShipmentDetailsStatus withError(@Nullable Boolean error) {
        this.error = error;
        return this;
    }


    /**
     * Shipment status code.
     */
    public ShipmentDetailsStatus withCode(@Nullable String code) {
        this.code = code;
        return this;
    }


    /**
     * Shipment status description.
     */
    public ShipmentDetailsStatus withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * Date and time of the shipment status change (UTC).
     */
    public ShipmentDetailsStatus withDate(@Nullable OffsetDateTime date) {
        this.date = date;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ShipmentDetailsStatus other = (ShipmentDetailsStatus) o;
        return 
            Utils.enhancedDeepEquals(this.error, other.error) &&
            Utils.enhancedDeepEquals(this.code, other.code) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.date, other.date);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            error, code, name,
            date);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ShipmentDetailsStatus.class,
                "error", error,
                "code", code,
                "name", name,
                "date", date);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean error;

        private String code;

        private String name;

        private OffsetDateTime date;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Indicates whether an error occurred during shipment processing.
         */
        public Builder error(@Nullable Boolean error) {
            this.error = error;
            return this;
        }

        /**
         * Shipment status code.
         */
        public Builder code(@Nullable String code) {
            this.code = code;
            return this;
        }

        /**
         * Shipment status description.
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * Date and time of the shipment status change (UTC).
         */
        public Builder date(@Nullable OffsetDateTime date) {
            this.date = date;
            return this;
        }

        public ShipmentDetailsStatus build() {
            return new ShipmentDetailsStatus(
                error, code, name,
                date);
        }

    }
}
