/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.postivo.sdk.utils.LazySingletonValue;
import pl.postivo.sdk.utils.Utils;

/**
 * RecipientFromAddressBookByExternalId
 * 
 * <p>Select shipment recipient data from the Address Book by external (custom) ID.
 */
public class RecipientFromAddressBookByExternalId {
    /**
     * External (custom) ID of the recipient stored in your Address Book.
     */
    @JsonProperty("ext_id")
    private String extId;

    /**
     * Set to true to fetch recipient data by external ID from a main account’s shared Address Book.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from_shared")
    private Boolean fromShared;

    /**
     * Custom shipment ID assigned by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_id")
    private JsonNullable<String> customId;

    /**
     * Optional postscript printed above the recipient data on the envelope.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postscript")
    private JsonNullable<String> postscript;

    @JsonCreator
    public RecipientFromAddressBookByExternalId(
            @JsonProperty("ext_id") @Nonnull String extId,
            @JsonProperty("from_shared") @Nullable Boolean fromShared,
            @JsonProperty("custom_id") @Nullable JsonNullable<String> customId,
            @JsonProperty("postscript") @Nullable JsonNullable<String> postscript) {
        this.extId = Optional.ofNullable(extId)
            .orElseThrow(() -> new IllegalArgumentException("extId cannot be null"));
        this.fromShared = Optional.ofNullable(fromShared)
            .orElse(Builder._SINGLETON_VALUE_FromShared.value());
        this.customId = Optional.ofNullable(customId)
            .orElse(JsonNullable.of(Builder._SINGLETON_VALUE_CustomId.value()));
        this.postscript = Optional.ofNullable(postscript)
            .orElse(JsonNullable.undefined());
    }
    
    public RecipientFromAddressBookByExternalId(
            @Nonnull String extId) {
        this(extId, null, null,
            null);
    }

    /**
     * External (custom) ID of the recipient stored in your Address Book.
     */
    public String extId() {
        return this.extId;
    }

    /**
     * Set to true to fetch recipient data by external ID from a main account’s shared Address Book.
     */
    public Optional<Boolean> fromShared() {
        return Optional.ofNullable(this.fromShared);
    }

    /**
     * Custom shipment ID assigned by the user.
     */
    public JsonNullable<String> customId() {
        return this.customId;
    }

    /**
     * Optional postscript printed above the recipient data on the envelope.
     */
    public JsonNullable<String> postscript() {
        return this.postscript;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * External (custom) ID of the recipient stored in your Address Book.
     */
    public RecipientFromAddressBookByExternalId withExtId(@Nonnull String extId) {
        this.extId = Utils.checkNotNull(extId, "extId");
        return this;
    }


    /**
     * Set to true to fetch recipient data by external ID from a main account’s shared Address Book.
     */
    public RecipientFromAddressBookByExternalId withFromShared(@Nullable Boolean fromShared) {
        this.fromShared = fromShared;
        return this;
    }


    /**
     * Custom shipment ID assigned by the user.
     */
    public RecipientFromAddressBookByExternalId withCustomId(@Nullable String customId) {
        this.customId = JsonNullable.of(customId);
        return this;
    }


    /**
     * Optional postscript printed above the recipient data on the envelope.
     */
    public RecipientFromAddressBookByExternalId withPostscript(@Nullable String postscript) {
        this.postscript = JsonNullable.of(postscript);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RecipientFromAddressBookByExternalId other = (RecipientFromAddressBookByExternalId) o;
        return 
            Utils.enhancedDeepEquals(this.extId, other.extId) &&
            Utils.enhancedDeepEquals(this.fromShared, other.fromShared) &&
            Utils.enhancedDeepEquals(this.customId, other.customId) &&
            Utils.enhancedDeepEquals(this.postscript, other.postscript);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            extId, fromShared, customId,
            postscript);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RecipientFromAddressBookByExternalId.class,
                "extId", extId,
                "fromShared", fromShared,
                "customId", customId,
                "postscript", postscript);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String extId;

        private Boolean fromShared;

        private JsonNullable<String> customId;

        private JsonNullable<String> postscript;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * External (custom) ID of the recipient stored in your Address Book.
         */
        public Builder extId(@Nonnull String extId) {
            this.extId = Utils.checkNotNull(extId, "extId");
            return this;
        }

        /**
         * Set to true to fetch recipient data by external ID from a main account’s shared Address Book.
         */
        public Builder fromShared(@Nullable Boolean fromShared) {
            this.fromShared = fromShared;
            return this;
        }

        /**
         * Custom shipment ID assigned by the user.
         */
        public Builder customId(@Nullable String customId) {
            this.customId = JsonNullable.of(customId);
            return this;
        }

        /**
         * Optional postscript printed above the recipient data on the envelope.
         */
        public Builder postscript(@Nullable String postscript) {
            this.postscript = JsonNullable.of(postscript);
            return this;
        }

        public RecipientFromAddressBookByExternalId build() {
            return new RecipientFromAddressBookByExternalId(
                extId, fromShared, customId,
                postscript);
        }


        private static final LazySingletonValue<Boolean> _SINGLETON_VALUE_FromShared =
                new LazySingletonValue<>(
                        "from_shared",
                        "false",
                        new TypeReference<Boolean>() {});

        private static final LazySingletonValue<String> _SINGLETON_VALUE_CustomId =
                new LazySingletonValue<>(
                        "custom_id",
                        "null",
                        new TypeReference<String>() {});
    }
}
