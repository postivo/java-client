/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import pl.postivo.sdk.utils.Utils;


public class MetadataResponseCarrier {
    /**
     * Unique carrier identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_id")
    private Long carrierId;

    /**
     * Carrier display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_name")
    private String carrierName;

    /**
     * Services (dispatch types) available for this carrier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("services")
    private List<MetadataResponseService> services;

    @JsonCreator
    public MetadataResponseCarrier(
            @JsonProperty("carrier_id") @Nullable Long carrierId,
            @JsonProperty("carrier_name") @Nullable String carrierName,
            @JsonProperty("services") @Nullable List<MetadataResponseService> services) {
        this.carrierId = carrierId;
        this.carrierName = carrierName;
        this.services = services;
    }
    
    public MetadataResponseCarrier() {
        this(null, null, null);
    }

    /**
     * Unique carrier identifier.
     */
    public Optional<Long> carrierId() {
        return Optional.ofNullable(this.carrierId);
    }

    /**
     * Carrier display name.
     */
    public Optional<String> carrierName() {
        return Optional.ofNullable(this.carrierName);
    }

    /**
     * Services (dispatch types) available for this carrier.
     */
    public Optional<List<MetadataResponseService>> services() {
        return Optional.ofNullable(this.services);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Unique carrier identifier.
     */
    public MetadataResponseCarrier withCarrierId(@Nullable Long carrierId) {
        this.carrierId = carrierId;
        return this;
    }


    /**
     * Carrier display name.
     */
    public MetadataResponseCarrier withCarrierName(@Nullable String carrierName) {
        this.carrierName = carrierName;
        return this;
    }


    /**
     * Services (dispatch types) available for this carrier.
     */
    public MetadataResponseCarrier withServices(@Nullable List<MetadataResponseService> services) {
        this.services = services;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MetadataResponseCarrier other = (MetadataResponseCarrier) o;
        return 
            Utils.enhancedDeepEquals(this.carrierId, other.carrierId) &&
            Utils.enhancedDeepEquals(this.carrierName, other.carrierName) &&
            Utils.enhancedDeepEquals(this.services, other.services);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            carrierId, carrierName, services);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MetadataResponseCarrier.class,
                "carrierId", carrierId,
                "carrierName", carrierName,
                "services", services);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Long carrierId;

        private String carrierName;

        private List<MetadataResponseService> services;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Unique carrier identifier.
         */
        public Builder carrierId(@Nullable Long carrierId) {
            this.carrierId = carrierId;
            return this;
        }

        /**
         * Carrier display name.
         */
        public Builder carrierName(@Nullable String carrierName) {
            this.carrierName = carrierName;
            return this;
        }

        /**
         * Services (dispatch types) available for this carrier.
         */
        public Builder services(@Nullable List<MetadataResponseService> services) {
            this.services = services;
            return this;
        }

        public MetadataResponseCarrier build() {
            return new MetadataResponseCarrier(
                carrierId, carrierName, services);
        }

    }
}
