/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.postivo.sdk.utils.Utils;

/**
 * ShipmentOptions
 * 
 * <p>Additional shipment settings.
 */
public class ShipmentOptions {
    /**
     * ID of the shipment configuration profile stored in the user account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predefined_config_id")
    private JsonNullable<Long> predefinedConfigId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inline_config")
    private JsonNullable<InlineConfigUnion> inlineConfig;

    /**
     * ID of the sender stored in the user account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sender_id")
    private JsonNullable<Long> senderId;

    /**
     * Scheduled dispatch date (ISO 8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispatch_date")
    private LocalDate dispatchDate;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback")
    private JsonNullable<CallbackUnion> callback;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("misc_info")
    private JsonNullable<MiscInfoUnion> miscInfo;

    /**
     * If true, rotate all documents 180째 before printing (barcodes will be printed on opposite margins).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rotate_documents")
    private Boolean rotateDocuments;

    @JsonCreator
    public ShipmentOptions(
            @JsonProperty("predefined_config_id") @Nullable JsonNullable<Long> predefinedConfigId,
            @JsonProperty("inline_config") @Nullable JsonNullable<InlineConfigUnion> inlineConfig,
            @JsonProperty("sender_id") @Nullable JsonNullable<Long> senderId,
            @JsonProperty("dispatch_date") @Nullable LocalDate dispatchDate,
            @JsonProperty("callback") @Nullable JsonNullable<CallbackUnion> callback,
            @JsonProperty("misc_info") @Nullable JsonNullable<MiscInfoUnion> miscInfo,
            @JsonProperty("rotate_documents") @Nullable Boolean rotateDocuments) {
        this.predefinedConfigId = Optional.ofNullable(predefinedConfigId)
            .orElse(JsonNullable.undefined());
        this.inlineConfig = Optional.ofNullable(inlineConfig)
            .orElse(JsonNullable.undefined());
        this.senderId = Optional.ofNullable(senderId)
            .orElse(JsonNullable.undefined());
        this.dispatchDate = dispatchDate;
        this.callback = Optional.ofNullable(callback)
            .orElse(JsonNullable.undefined());
        this.miscInfo = Optional.ofNullable(miscInfo)
            .orElse(JsonNullable.undefined());
        this.rotateDocuments = rotateDocuments;
    }
    
    public ShipmentOptions() {
        this(null, null, null,
            null, null, null,
            null);
    }

    /**
     * ID of the shipment configuration profile stored in the user account.
     */
    public JsonNullable<Long> predefinedConfigId() {
        return this.predefinedConfigId;
    }

    public JsonNullable<InlineConfigUnion> inlineConfig() {
        return this.inlineConfig;
    }

    /**
     * ID of the sender stored in the user account.
     */
    public JsonNullable<Long> senderId() {
        return this.senderId;
    }

    /**
     * Scheduled dispatch date (ISO 8601).
     */
    public Optional<LocalDate> dispatchDate() {
        return Optional.ofNullable(this.dispatchDate);
    }

    public JsonNullable<CallbackUnion> callback() {
        return this.callback;
    }

    public JsonNullable<MiscInfoUnion> miscInfo() {
        return this.miscInfo;
    }

    /**
     * If true, rotate all documents 180째 before printing (barcodes will be printed on opposite margins).
     */
    public Optional<Boolean> rotateDocuments() {
        return Optional.ofNullable(this.rotateDocuments);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * ID of the shipment configuration profile stored in the user account.
     */
    public ShipmentOptions withPredefinedConfigId(@Nullable Long predefinedConfigId) {
        this.predefinedConfigId = JsonNullable.of(predefinedConfigId);
        return this;
    }


    public ShipmentOptions withInlineConfig(@Nullable InlineConfigUnion inlineConfig) {
        this.inlineConfig = JsonNullable.of(inlineConfig);
        return this;
    }


    /**
     * ID of the sender stored in the user account.
     */
    public ShipmentOptions withSenderId(@Nullable Long senderId) {
        this.senderId = JsonNullable.of(senderId);
        return this;
    }


    /**
     * Scheduled dispatch date (ISO 8601).
     */
    public ShipmentOptions withDispatchDate(@Nullable LocalDate dispatchDate) {
        this.dispatchDate = dispatchDate;
        return this;
    }


    public ShipmentOptions withCallback(@Nullable CallbackUnion callback) {
        this.callback = JsonNullable.of(callback);
        return this;
    }


    public ShipmentOptions withMiscInfo(@Nullable MiscInfoUnion miscInfo) {
        this.miscInfo = JsonNullable.of(miscInfo);
        return this;
    }


    /**
     * If true, rotate all documents 180째 before printing (barcodes will be printed on opposite margins).
     */
    public ShipmentOptions withRotateDocuments(@Nullable Boolean rotateDocuments) {
        this.rotateDocuments = rotateDocuments;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ShipmentOptions other = (ShipmentOptions) o;
        return 
            Utils.enhancedDeepEquals(this.predefinedConfigId, other.predefinedConfigId) &&
            Utils.enhancedDeepEquals(this.inlineConfig, other.inlineConfig) &&
            Utils.enhancedDeepEquals(this.senderId, other.senderId) &&
            Utils.enhancedDeepEquals(this.dispatchDate, other.dispatchDate) &&
            Utils.enhancedDeepEquals(this.callback, other.callback) &&
            Utils.enhancedDeepEquals(this.miscInfo, other.miscInfo) &&
            Utils.enhancedDeepEquals(this.rotateDocuments, other.rotateDocuments);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            predefinedConfigId, inlineConfig, senderId,
            dispatchDate, callback, miscInfo,
            rotateDocuments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ShipmentOptions.class,
                "predefinedConfigId", predefinedConfigId,
                "inlineConfig", inlineConfig,
                "senderId", senderId,
                "dispatchDate", dispatchDate,
                "callback", callback,
                "miscInfo", miscInfo,
                "rotateDocuments", rotateDocuments);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Long> predefinedConfigId;

        private JsonNullable<InlineConfigUnion> inlineConfig;

        private JsonNullable<Long> senderId;

        private LocalDate dispatchDate;

        private JsonNullable<CallbackUnion> callback;

        private JsonNullable<MiscInfoUnion> miscInfo;

        private Boolean rotateDocuments;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the shipment configuration profile stored in the user account.
         */
        public Builder predefinedConfigId(@Nullable Long predefinedConfigId) {
            this.predefinedConfigId = JsonNullable.of(predefinedConfigId);
            return this;
        }

        public Builder inlineConfig(@Nullable InlineConfigUnion inlineConfig) {
            this.inlineConfig = JsonNullable.of(inlineConfig);
            return this;
        }

        /**
         * ID of the sender stored in the user account.
         */
        public Builder senderId(@Nullable Long senderId) {
            this.senderId = JsonNullable.of(senderId);
            return this;
        }

        /**
         * Scheduled dispatch date (ISO 8601).
         */
        public Builder dispatchDate(@Nullable LocalDate dispatchDate) {
            this.dispatchDate = dispatchDate;
            return this;
        }

        public Builder callback(@Nullable CallbackUnion callback) {
            this.callback = JsonNullable.of(callback);
            return this;
        }

        public Builder miscInfo(@Nullable MiscInfoUnion miscInfo) {
            this.miscInfo = JsonNullable.of(miscInfo);
            return this;
        }

        /**
         * If true, rotate all documents 180째 before printing (barcodes will be printed on opposite margins).
         */
        public Builder rotateDocuments(@Nullable Boolean rotateDocuments) {
            this.rotateDocuments = rotateDocuments;
            return this;
        }

        public ShipmentOptions build() {
            return new ShipmentOptions(
                predefinedConfigId, inlineConfig, senderId,
                dispatchDate, callback, miscInfo,
                rotateDocuments);
        }

    }
}
