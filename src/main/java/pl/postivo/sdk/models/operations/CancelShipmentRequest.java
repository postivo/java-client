/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nonnull;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import pl.postivo.sdk.utils.SpeakeasyMetadata;
import pl.postivo.sdk.utils.Utils;


public class CancelShipmentRequest {
    /**
     * Shipment IDs assigned by the system (comma-separated). The system accepts a maximum of **50**
     * identifiers per call.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=true,name=ids")
    private List<String> ids;

    @JsonCreator
    public CancelShipmentRequest(
            @Nonnull List<String> ids) {
        this.ids = Optional.ofNullable(ids)
            .orElseThrow(() -> new IllegalArgumentException("ids cannot be null"));
    }

    /**
     * Shipment IDs assigned by the system (comma-separated). The system accepts a maximum of **50**
     * identifiers per call.
     */
    public List<String> ids() {
        return this.ids;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Shipment IDs assigned by the system (comma-separated). The system accepts a maximum of **50**
     * identifiers per call.
     */
    public CancelShipmentRequest withIds(@Nonnull List<String> ids) {
        this.ids = Utils.checkNotNull(ids, "ids");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CancelShipmentRequest other = (CancelShipmentRequest) o;
        return 
            Utils.enhancedDeepEquals(this.ids, other.ids);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            ids);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CancelShipmentRequest.class,
                "ids", ids);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<String> ids;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Shipment IDs assigned by the system (comma-separated). The system accepts a maximum of **50**
         * identifiers per call.
         */
        public Builder ids(@Nonnull List<String> ids) {
            this.ids = Utils.checkNotNull(ids, "ids");
            return this;
        }

        public CancelShipmentRequest build() {
            return new CancelShipmentRequest(
                ids);
        }

    }
}
