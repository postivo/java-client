/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.operations;

import static pl.postivo.sdk.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import pl.postivo.sdk.SDKConfiguration;
import pl.postivo.sdk.operations.GetDocuments;
import pl.postivo.sdk.utils.Headers;
import pl.postivo.sdk.utils.Options;
import pl.postivo.sdk.utils.RetryConfig;
import pl.postivo.sdk.utils.Utils;

public class GetDocumentsRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers();
    private final GetDocumentsRequest.Builder pojoBuilder;
    private GetDocumentsRequest request;
    private final Options.Builder optionsBuilder;
    private boolean _setterCalled;

    public GetDocumentsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.pojoBuilder = GetDocumentsRequest.builder();
        this.optionsBuilder = Options.builder();
    }

    public GetDocumentsRequestBuilder id(@Nonnull String id) {
        this.pojoBuilder.id(id);
        this._setterCalled = true;
        return this;
    }

    public GetDocumentsRequestBuilder type(@Nonnull DocumentType type) {
        this.pojoBuilder.type(type);
        this._setterCalled = true;
        return this;
    }

    public GetDocumentsRequestBuilder retryConfig(RetryConfig retryConfig) {
        this.optionsBuilder.retryConfig(retryConfig);
        return this;
    }

    private GetDocumentsRequest _buildRequest() {
        if (this._setterCalled) {
            this.request = this.pojoBuilder.build();
        }
        return this.request;
    }
    
    public GetDocumentsRequestBuilder header(String name, String value) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        this._headers.add(name, value);
        return this;
    }

    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public GetDocumentsResponse call() throws Exception {
        Options options = optionsBuilder.build();
        RequestOperation<GetDocumentsRequest, GetDocumentsResponse> operation
              = new GetDocuments.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(this._buildRequest()));
    }
}
