/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.operations;

import static pl.postivo.sdk.operations.Operations.RequestOperation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import pl.postivo.sdk.SDKConfiguration;
import pl.postivo.sdk.operations.DeleteContactByExternalId;
import pl.postivo.sdk.utils.Headers;
import pl.postivo.sdk.utils.Options;
import pl.postivo.sdk.utils.RetryConfig;
import pl.postivo.sdk.utils.Utils;

public class DeleteContactByExternalIdRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers();
    private final DeleteContactByExternalIdRequest.Builder pojoBuilder;
    private DeleteContactByExternalIdRequest request;
    private final Options.Builder optionsBuilder;
    private boolean _setterCalled;

    public DeleteContactByExternalIdRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.pojoBuilder = DeleteContactByExternalIdRequest.builder();
        this.optionsBuilder = Options.builder();
    }

    public DeleteContactByExternalIdRequestBuilder extId(@Nonnull String extId) {
        this.pojoBuilder.extId(extId);
        this._setterCalled = true;
        return this;
    }

    public DeleteContactByExternalIdRequestBuilder retryConfig(RetryConfig retryConfig) {
        this.optionsBuilder.retryConfig(retryConfig);
        return this;
    }

    private DeleteContactByExternalIdRequest _buildRequest() {
        if (this._setterCalled) {
            this.request = this.pojoBuilder.build();
        }
        return this.request;
    }
    
    public DeleteContactByExternalIdRequestBuilder header(String name, String value) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        this._headers.add(name, value);
        return this;
    }

    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public DeleteContactByExternalIdResponse call() throws Exception {
        Options options = optionsBuilder.build();
        RequestOperation<DeleteContactByExternalIdRequest, DeleteContactByExternalIdResponse> operation
              = new DeleteContactByExternalId.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(this._buildRequest()));
    }
}
