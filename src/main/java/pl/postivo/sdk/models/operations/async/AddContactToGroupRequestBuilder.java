/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk.models.operations.async;

import static pl.postivo.sdk.operations.Operations.AsyncRequestOperation;

import jakarta.annotation.Nullable;
import java.util.concurrent.CompletableFuture;
import pl.postivo.sdk.SDKConfiguration;
import pl.postivo.sdk.models.operations.AddContactToGroupRequest;
import pl.postivo.sdk.operations.AddContactToGroup;
import pl.postivo.sdk.utils.Headers;
import pl.postivo.sdk.utils.Options;
import pl.postivo.sdk.utils.RetryConfig;
import pl.postivo.sdk.utils.Utils;

public class AddContactToGroupRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers();
    private final AddContactToGroupRequest.Builder pojoBuilder;
    private AddContactToGroupRequest request;
    private final Options.Builder optionsBuilder;
    private boolean _setterCalled;

    public AddContactToGroupRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.pojoBuilder = AddContactToGroupRequest.builder();
        this.optionsBuilder = Options.builder();
    }

    public AddContactToGroupRequestBuilder id(long id) {
        this.pojoBuilder.id(id);
        this._setterCalled = true;
        return this;
    }

    public AddContactToGroupRequestBuilder groupId(long groupId) {
        this.pojoBuilder.groupId(groupId);
        this._setterCalled = true;
        return this;
    }

    public AddContactToGroupRequestBuilder retryConfig(RetryConfig retryConfig) {
        this.optionsBuilder.retryConfig(retryConfig);
        return this;
    }

    private AddContactToGroupRequest _buildRequest() {
        if (this._setterCalled) {
            this.request = this.pojoBuilder.build();
        }
        return this.request;
    }
    
    public AddContactToGroupRequestBuilder header(String name, String value) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        this._headers.add(name, value);
        return this;
    }

    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public CompletableFuture<AddContactToGroupResponse> call() {
        Options options = optionsBuilder.build();
        AsyncRequestOperation<AddContactToGroupRequest, AddContactToGroupResponse> operation
              = new AddContactToGroup.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(this._buildRequest())
            .thenCompose(operation::handleResponse);
    }
}
