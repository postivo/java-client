/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package pl.postivo.sdk;

import static pl.postivo.sdk.operations.Operations.AsyncRequestlessOperation;

import jakarta.annotation.Nullable;
import java.util.concurrent.CompletableFuture;
import pl.postivo.sdk.models.operations.async.PingRequestBuilder;
import pl.postivo.sdk.models.operations.async.PingResponse;
import pl.postivo.sdk.operations.Ping;
import pl.postivo.sdk.utils.Headers;
import pl.postivo.sdk.utils.Options;

/**
 * Common
 */
public class AsyncCommon {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Common syncSDK;

    AsyncCommon(Common syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Common sync() {
        return syncSDK;
    }


    /**
     * Check API availability and version
     * 
     * <p>Check the API connection and current availability status. The response also includes the current API
     * version.
     * 
     * @return The async call builder
     */
    public PingRequestBuilder ping() {
        return new PingRequestBuilder(sdkConfiguration);
    }

    /**
     * Check API availability and version
     * 
     * <p>Check the API connection and current availability status. The response also includes the current API
     * version.
     * 
     * @return {@code CompletableFuture<PingResponse>} - The async response
     */
    public CompletableFuture<PingResponse> pingDirect() {
        return ping(null);
    }

    /**
     * Check API availability and version
     * 
     * <p>Check the API connection and current availability status. The response also includes the current API
     * version.
     * 
     * @param options additional options
     * @return {@code CompletableFuture<PingResponse>} - The async response
     */
    public CompletableFuture<PingResponse> ping(@Nullable Options options) {
        AsyncRequestlessOperation<PingResponse> operation
            = new Ping.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }

}
